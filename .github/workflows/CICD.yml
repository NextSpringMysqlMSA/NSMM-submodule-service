name: Build and Deploy All Services to EKS

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Images
        run: |
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest --push ./auth-service
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/config-service:latest --push ./config-service
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/discovery-service:latest --push ./discovery-service
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/tcfd-service:latest --push ./tcfd-service
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/gri-service:latest --push ./gri-service
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/csdd-service:latest --push ./csdd-service
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/dashboard-service:latest --push ./dashboard-service
          docker buildx build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend-service:latest --push ./frontend-service

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Update Kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ap-northeast-2 --name nsmm-eks

      - name: Download YAMLs from S3
        run: |
          mkdir -p k8s-yaml
          aws s3 cp s3://esg-storage-bucket/k8s-yaml/ ./k8s-yaml/ --recursive

      - name: Replace image tags in deployment YAMLs
        run: |
          sed -i "s|image: .*auth-service.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest|g" k8s-yaml/auth-service/*.yaml || true
          sed -i "s|image: .*config-service.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/config-service:latest|g" k8s-yaml/config-service/*.yaml || true
          sed -i "s|image: .*discovery-service.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/discovery-service:latest|g" k8s-yaml/discovery-service/*.yaml || true
          sed -i "s|image: .*tcfd-service.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/tcfd-service:latest|g" k8s-yaml/tcfd-service/*.yaml || true
          sed -i "s|image: .*gri-service.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/gri-service:latest|g" k8s-yaml/gri-service/*.yaml || true
          sed -i "s|image: .*csdd-service.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/csdd-service:latest|g" k8s-yaml/csdd-service/*.yaml || true
          sed -i "s|image: .*dashboard-service.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/dashboard-service:latest|g" k8s-yaml/dashboard-service/*.yaml || true
          sed -i "s|image: .*frontend-service.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/frontend-service:latest|g" k8s-yaml/frontend-service/*.yaml || true

      - name: Apply YAMLs to EKS
        run: |
          find k8s-yaml -type f -name "*.yaml" | while read file; do
            echo "▶️ Applying $file"
            kubectl apply -f "$file"
          done
